{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","proptype","PropTypes","object","isRequired","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","NotFound","Test","title","body","fetch","then","response","json","_this$state","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","onSubmit","e","newContact","preventDefault","errors","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","about","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8434c693.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                {\"\"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n\r\n                <Link to={`contact/edit/${id}`}>\r\n                   <i className=\"fas fa-pencil-alt\"\r\n                    style={{ cursor: \"pointer\", float: \"right\", color: \"black\", marginRight: '1rem' }}\r\n                    />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.proptype = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from '../../context'\r\n\r\nclass Contacts extends Component {\r\n  \r\n  // deleteContact = id => {\r\n  //   const { contacts } = this.state;\r\n\r\n  //   const newContacts = contacts.filter(contact => contact.id !== id);\r\n  //   this.setState({ conctacts: newContacts });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contacts</span> List </h1>\r\n              {contacts.map(contact => (\r\n              <Contact key={contact.id} contact={contact}\r\n              // deleteClickedHandler={this.deleteContact.bind(this, contact.id)}\r\n            />\r\n          ))}\r\n        </React.Fragment>\r\n        )\r\n      }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className = \"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n        {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className = \"nav-item\">\r\n              <Link to = \"/\" className = \"nav-link\"><i className = \"fas fa-home\" />Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\" />Add</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\" />About</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple application to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className = \"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        //className='is-invalid form-control form-control-lg'\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid':error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {/* <div className=\"invalid-feedback\">This is wrong</div> */}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>} \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    error: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Checking for errors\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    // for clear the inputbox after the submit\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card md-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    //error={this.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    //error={this.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    //error={this.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    error: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Checking for errors\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    // for clear the inputbox after the submit\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card md-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={this.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={this.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={this.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport about from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={about} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}